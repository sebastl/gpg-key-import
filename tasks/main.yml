---

- name: create system group
  group:
    name: "{{ gpg_group }}"
    system: "{{ 'yes' if gpg_system_group else 'no' }}"
    state: present

- name: create system user
  user:
    name: "{{ gpg_user }}"
    group: "{{ gpg_group }}"
    home: "{{ gpg_home }}"
    system: "{{ 'yes' if gpg_system_user else 'no' }}"

- name: check public key
  become_user: "{{ gpg_user }}"
  shell: gpg --list-public-keys
  ignore_errors: true
  changed_when: false
  register: pubkey_imported

- name: check secret key
  become_user: "{{ gpg_user }}"
  shell: gpg --list-secret-keys
  ignore_errors: true
  changed_when: false
  register: seckey_imported

- name: check ownertrust
  become_user: "{{ gpg_user }}"
  shell: gpg --export-ownertrust
  ignore_errors: true
  changed_when: false
  register: trust_imported

- name: ensure gpg dicrectory and keys
  block:
    - name: ensure gnupg directory
      file:
        path: "{{ tmp_dir }}"
        state: "directory"
        owner: "{{ gpg_user }}"
        group: "{{ gpg_group }}"
        mode: "0700"

    - name: copy gpg keys
      template:
        src: "{{ item }}"
        dest: "{{ tmp_dir }}/{{ item | basename }}"
        owner: "{{ gpg_user }}"
        group: "{{ gpg_group }}"
        mode: "0600"
      with_items:
        - "{{ gpg_pubkey_path }}"
        - "{{ gpg_seckey_path }}"
        - "{{ gpg_trustfile_path }}"
  when: (seckey_imported.stdout == "") and (pubkey_imported.stdout == "") and (":6:" not in trust_imported.stdout)

- name: import public key
  become_user: "{{ gpg_user }}"
  shell: gpg --import "{{ tmp_dir }}/{{ gpg_pubkey_path | basename }}"
  when: gpg_email not in pubkey_imported.stdout

- name: import secret key
  become_user: "{{ gpg_user }}"
  shell: gpg --import "{{ tmp_dir }}/{{ gpg_seckey_path | basename }}"
  when: gpg_email not in seckey_imported.stdout

- name: import ownertrust
  become_user: "{{ gpg_user }}"
  shell: gpg --import-ownertrust "{{ tmp_dir }}/{{ gpg_trustfile_path | basename }}"
  when: (":6:" not in trust_imported.stdout)

- name: clean up directory and keys
  file:
    state: absent
    path: "{{ tmp_dir }}/"
